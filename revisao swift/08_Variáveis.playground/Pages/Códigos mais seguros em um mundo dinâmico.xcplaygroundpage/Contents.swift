/*:
 ## CÃ³digos mais seguros em um mundo dinÃ¢mico
 Por que se preocupar com constantes quando Ã© possÃ­vel usar apenas variÃ¡veis? As variÃ¡veis nÃ£o sÃ£o melhores porque podem ser alteradas a qualquer momento?

NÃ£o.

Ã€s vezes, vocÃª formularÃ¡ cÃ³digos que esperam que o mundo se comporte de uma determinada forma. Imagine que vocÃª pergunta o que um amigo gostaria de beber e depois busca a bebida que ele escolheu.*/
var friendBeverageChoice = "cafÃ©"

driveAcrossTown()
buyACoffeeMaker()
/*:Talvez vocÃª demore para buscar a bebida e, durante esse tempo, nÃ£o tenha como saber se seu amigo mudou de ideia.*/
friendBeverageChoice = "chÃ¡"

findCoffeeGrinder()

friendBeverageChoice = "Ã¡gua"
friendBeverageChoice = "Ã¡gua com gÃ¡s"
friendBeverageChoice = "Ã¡gua sem gÃ¡s"

findCoffeeBeans()
driveHome()
setUpCoffeeGrinder()

friendBeverageChoice = "nada ğŸ˜´"

grindBeans()
makeFriendDrinkCoffee()
/*:
 VocÃª pode atÃ© bater na porta da casa do seu amigo Ã s 3h da manhÃ£ esperando que ele acorde feliz para tomar o seu cafÃ©, mas o mais provÃ¡vel Ã© que ele fique bravo, e vocÃª, desapontado. A vontade de tomar cafÃ© do seu amigo Ã© variÃ¡vel, entÃ£o vocÃª nÃ£o pode se comportar como se ela fosse constante.

 Em programaÃ§Ã£o, o problema das variÃ¡veis Ã© exatamente o mesmo. Se vocÃª verificar o valor delas apenas uma vez e depois realizar vÃ¡rias tarefas que dependem de que esse valor permaneÃ§a o mesmo, poderÃ¡ acabar fazendo trabalhos desnecessÃ¡rios ou totalmente errados.
 - callout(Experiment):\
(ExperiÃªncia):\
Altere `friendBeverageChoice` de `var` para uma constante `let` e observe os erros que surgem na pÃ¡gina. Existem duas maneiras de corrigir esse cÃ³digo.\
A primeira Ã© manter `friendBeverageChoice` como constante com `let` e apagar todas as linhas com tarefas que alteram essa constante.\
A segunda Ã© transformar `friendBeverageChoice` em variÃ¡vel com `var` e apagar todas as linhas que vocÃª nÃ£o tem certeza de que precisarÃ¡, como `setUpCoffeeGrinder()`.\
A segunda opÃ§Ã£o nÃ£o serve para criar um programa muito Ãºtil, nÃ£o Ã©?
 
 Como Ã© possÃ­vel combinar constantes e variÃ¡veis?
 
[Anterior](@previous)  |  pÃ¡gina 9 de 13  |  [Na sequÃªncia: CÃ³digos mais seguros em um mundo inesperado](@next)
*/

